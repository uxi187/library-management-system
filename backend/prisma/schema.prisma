// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Author {
  id        String   @id @default(cuid())
  name      String
  bio       String?
  birthYear Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  books Book[]

  @@map("authors")
}

model Category {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  books Book[]

  @@map("categories")
}

model Book {
  id            String    @id @default(cuid())
  title         String
  isbn          String?   @unique
  publishedYear Int?
  description   String?
  available     Boolean   @default(true)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  author        Author    @relation(fields: [authorId], references: [id])
  authorId      String
  
  category      Category  @relation(fields: [categoryId], references: [id])
  categoryId    String
  
  borrowings    Borrowing[]

  @@map("books")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  phone     String?
  address   String?
  role      Role     @default(MEMBER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  borrowings Borrowing[]

  @@map("users")
}

model Borrowing {
  id          String    @id @default(cuid())
  borrowedAt  DateTime  @default(now())
  dueDate     DateTime
  returnedAt  DateTime?
  status      BorrowStatus @default(ACTIVE)
  
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  
  book        Book      @relation(fields: [bookId], references: [id])
  bookId      String
  
  @@map("borrowings")
}

enum Role {
  ADMIN
  LIBRARIAN
  MEMBER
}

enum BorrowStatus {
  ACTIVE
  RETURNED
  OVERDUE
}